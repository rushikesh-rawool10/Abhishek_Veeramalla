Hypervisor uses the concept of virtualization
  virtualization--> creating virtual servers on top of physical servers.
  virtual machine is a logical isolation
each app has its own operating system

Docker containers are lightweight in nature, because they do not have a complete operating system.
they use resources from the base operating system.
containers have a minimal operating system--> base image.

A container is a package that is a combination of application, required libraries/dependencies plus system dependencies

DOCKER ARCHITECTURE
docker client | docker host | docker registry
docker commands | docker daemon(dockerd) | docker hub
docker build   | images  containers | docker images stores
        run
        pull

DOCKER LIFECYCLE
dockerfile -> docker image--> docker container

ENTRYPOINT VS CMD

entrypint parameters we can not override. the parameter that we want to keep as fix/permanent in the dockerfile, keep it in entrypoint

CMD parameters are re-configurable

docker run -p 8000:8000 --> means map application port with ec2 instance port


MULTISTAGE DOCKERFILE

from ubuntu as build (alias)
run

from python/java/distroless
copy --from build /app /app
CMD [/app]

=============================
front end  stage

-------------
backend stage

-----------
final  stage

stages can be countless but final should be minimalistic image


distroless images only have runtime environment to run the application.
means cmd [/app]

biggest advantages--> security and reduces container image size

=================================
bind mounts vs volumes

in bind mount host storage will be fixed where as in volumes we can attach different types of volumes as per requirements like ec2,s3,nfs,
read or write intensive





